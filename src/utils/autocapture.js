// Chrome uzantÄ±sÄ± ile ana uygulama arasÄ±nda iletiÅŸim kuracak content script

// AutoCapture fonksiyonlarÄ±nÄ± iÃ§e aktarÄ±n
export function observeLoginForms(onPasswordCaptured) {
  // Sayfa yÃ¼klendiÄŸinde mevcut formlarÄ± ve ÅŸifre alanlarÄ±nÄ± kontrol et
  setTimeout(() => {
    detectForms(onPasswordCaptured);
    detectPasswordFields(onPasswordCaptured);
  }, 1000); // Sayfa yÃ¼klendikten sonra Ã§alÄ±ÅŸtÄ±r

  // Yeni eklenen inputlarÄ± takip etmek iÃ§in MutationObserver
  const observer = new MutationObserver(() => {
    detectForms(onPasswordCaptured);
    detectPasswordFields(onPasswordCaptured);
  });

  observer.observe(document.body, { childList: true, subtree: true });
}

// ðŸ“Œ Form iÃ§inde olmayan ÅŸifre alanlarÄ±nÄ± tespit eden fonksiyon
function detectPasswordFields(onPasswordCaptured) {
  // Form iÃ§inde olmayan tÃ¼m ÅŸifre alanlarÄ±nÄ± bul
  const passwordFields = document.querySelectorAll('input[type="password"]:not(form *)');
  
  passwordFields.forEach((passwordField) => {
    if (!passwordField.hasAttribute('data-pw-listener')) {
      passwordField.setAttribute('data-pw-listener', 'true');
      
      // YakÄ±ndaki olasÄ± kullanÄ±cÄ± adÄ± alanÄ±nÄ± bul
      const possibleUsernameField = findNearbyUsernameField(passwordField);
      
      // Åžifre alanÄ± deÄŸiÅŸikliÄŸini dinle
      passwordField.addEventListener("input", function() {
        const passwordValue = passwordField.value;
        const usernameValue = possibleUsernameField ? possibleUsernameField.value : "";
        
        if (passwordValue && passwordValue.length > 3) {
          onPasswordCaptured(usernameValue, passwordValue, window.location.hostname);
        }
      });
      
      // Åžifre alanÄ± blur olayÄ±nÄ± dinle (odak kaybettiÄŸinde)
      passwordField.addEventListener("blur", function() {
        const passwordValue = passwordField.value;
        const usernameValue = possibleUsernameField ? possibleUsernameField.value : "";
        
        if (passwordValue && passwordValue.length > 3) {
          onPasswordCaptured(usernameValue, passwordValue, window.location.hostname);
        }
      });
    }
  });
}

// Åžifre alanÄ±nÄ±n yakÄ±nÄ±ndaki olasÄ± kullanÄ±cÄ± adÄ± alanÄ±nÄ± bul
function findNearbyUsernameField(passwordField) {
  // AynÄ± container iÃ§indeki text veya email inputlarÄ± ara
  const parent = passwordField.parentElement;
  if (parent) {
    const usernameField = parent.querySelector('input[type="text"], input[type="email"]');
    if (usernameField) return usernameField;
  }
  
  // Bir Ã¼st container'a bak
  const grandParent = parent ? parent.parentElement : null;
  if (grandParent) {
    const usernameField = grandParent.querySelector('input[type="text"], input[type="email"]');
    if (usernameField) return usernameField;
  }
  
  // Sayfadaki tÃ¼m text/email inputlarÄ±nÄ± kontrol et ve en yakÄ±n olanÄ± bul
  const allUsernameFields = document.querySelectorAll('input[type="text"], input[type="email"]');
  if (allUsernameFields.length > 0) {
    // BasitÃ§e ilk bulunanÄ± dÃ¶ndÃ¼r
    return allUsernameFields[0];
  }
  
  return null;
}

// ðŸ“Œ FormlarÄ± tespit edip event listener ekleyen fonksiyon
function detectForms(onPasswordCaptured) {
  const forms = document.querySelectorAll("form");

  forms.forEach((form) => {
    const passwordField = form.querySelector('input[type="password"]');
    const usernameField = form.querySelector('input[type="text"], input[type="email"]');

    if (passwordField && usernameField) {
      // Form submit olayÄ±nÄ± dinle
      if (!form.hasAttribute('data-pw-listener')) {
        form.setAttribute('data-pw-listener', 'true');
        
        form.addEventListener("submit", function(event) {
          const passwordValue = passwordField.value;
          const usernameValue = usernameField.value || "";
          
          if (passwordValue && passwordValue.length > 3) {
            onPasswordCaptured(usernameValue, passwordValue, window.location.hostname);
          }
        });
        
        // Åžifre alanÄ± deÄŸiÅŸikliÄŸini dinle
        passwordField.addEventListener("input", function() {
          const passwordValue = passwordField.value;
          const usernameValue = usernameField.value || "";
          
          if (passwordValue && passwordValue.length > 3) {
            onPasswordCaptured(usernameValue, passwordValue, window.location.hostname);
          }
        });
      }
    }
  });
}

// Chrome uzantÄ±sÄ± API'lerini kontrol et ve kullan
if (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.onMessage) {
  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    if (message.action === "passwordCaptured") {
      // Chrome storage'a kaydet
      chrome.storage.local.set({ 
        capturedData: message.data,
        showSavePrompt: true 
      });
    }
  });
}
  